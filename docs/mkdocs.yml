site_name: lolpop Documentation
docs_dir: src
site_description: A Software Engineering Framework for Machine Learning
site_url: https://lolpop.readthedocs.io
repo_url: https://github.com/jordanvolz/lolpop
edit_uri: docs/src/
repo_name: lolpop
theme: 
  name: material
  logo: assets/lolpop.png
  features: 
    - navigation.instant
    - navigation.tracking
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.path
    - navigation.prune
    - navigation.index
    - navigation.sections
    - navigation.footer
    - navigation.top
    - search.suggest
    - search.highlight
    - search.share
    - toc.follow
    - content.code.copy
    - content.code.select
    - content.tab.
plugins: 
  - search
markdown_extensions: 
  - toc: 
      permalink: true
      title: On this page 
  - abbr 
  - admonition
  - attr_list 
  - def_list 
  - footnotes 
  - tables
  - pymdownx.highlight
  - pymdownx.inlinehilite
  - pymdownx.superfences
  - pymdownx.snippets 
  - pymdownx.tabbed: 
      alternate_style: true
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
extra: 
  social: 
  - icon: fontawesome/brands/github
    link: https://github.com/jordanvolz/lolpop
  - icon: fontawesome/brands/discord
    link: https://discord.gg/4FmK7jERsh
nav: 
  - lolpop User Guide: 
    - Getting Started: 
      - Introduction: index.md
      - Installation: installation.md
      - Concepts: concepts.md 
      - Quickstart: quickstart.md
    - User Guide:
      - Overview: lolpop_overview.md
      - Configuration: configuration.md 
      - Building Workflows: building_workflows.md
      - Running Workflows: running_workflows.md
      - Testing Workflows: testing_workflows.md
      - Using Orchestrators: working_with_orchestrators.md
      - Integration Frameworks: integration_framework.md
      - lolpop Projects: lolpop_projects.md
    - Extensions: 
        - Overview: extensions.md
        - Creating an Extension: building_extensions.md
        - Using Extensions: using_extensions.md 
        - Packaging And Installing Extensions: packaging_extensions.md
        - Writing Tests: writing_extension_tests.md
        - Generating Documentation: writing_extension_documentation.md
        - Extending the CLI: extending_cli.md
        - Custom Decorators: using_custom_decorators.md
    - CLI: 
      - Overview: cli.md
      - User Guide: cli_guide.md
      - Reference: cli_reference.md
    - Resources: 
      - About: about.md
      - Contributing: contributing.md
      - Community: community.md
      - Contact & Requesting Features: contact.md
  - Integrations: 
    - Overview: integrations.md
    - Components: 
      #- Overview: components.md
      - BaseComponent: base_component.md
      - Cache Manager: 
        - BaseCacheManager: base_cache_manager.md
        - LocalCacheManager: local_cache_manager.md
      - Data Checkers: 
        - BaseDataChecker: base_data_checker.md
        - Deepchecks: deepchecks_data_checker.md
        - EvidentlyAI: evidentlyai_data_checker.md
        - Stumpy: stumpy_matrix_profiler.md
      - Data Connectors: 
        - BaseDataConnector: base_data_connector.md
        - BigQuery: bigquery_data_connector.md
        - Databricks: databricks_sql_data_connector.md
        - DuckDB: duckdb_data_connector.md
        - Google Cloud Storage: gcs_data_connector.md
        - Local: local_data_connector.md
        - Postgres: postgres_data_connector.md
        - Redshift: redshift_data_connector.md
        - S3: s3_data_connector.md
        - Snowflake: snowflake_data_connector.md
      - Data Profilers:
        - BaseDataProfiler: base_data_profiler.md
        - EvidentlyAI: evidentlyai_data_profiler.md
        - Sweetviz: sweetviz_data_profiler.md
        - tslumen: tslumen_data_profiler.md
        - YData: ydata_data_profiler.md 
      - Data Splitter: 
        - BaseDataSplitter: base_data_splitter.md
        - Local: local_data_splitter.md
      - Data Synthesizers: 
        - BaseDataSynthesizer: base_data_synthesizer.md 
        - SDV: sdv_data_synthesizer.md
      - Data Transformers: 
        - BaseDataTransformer: base_data_transformer.md
        - Bigquery: bigquery_data_transformer.md
        - Databricks SQL: databricks_sql_data_transformer.md
        - dbt: dbt_data_transformer.md
        - DuckDB: duckdb_data_transformer.md
        - Local: local_data_transformer.md
        - Postgres: postgres_data_transformer.md
        - Redshift: redshift_data_transformer.md 
        - Snowflake: snowflake_data_transformer.md
      - Feature Transformers: 
        - BaseFeatureTransformer: base_feature_transformer.md
        - Feature Engine: feature_engine_feature_transformer.md
        - Local: local_feature_transformer.md
        - scikit-learn: sklearn_feature_transformer.md
      - Generative AI Chatbots: 
        - BaseGenAIChatbot: base_genai_chatbot.md
        - OpenAI: openai_chatbot.md 
      - Hyperparameter Tuners: 
        - BaseHyperparameterTuner: base_hyperparameter_tuner.md
        - Local: local_hyperparameter_tuner.md
        - Optuna: optuna_hyperparameter_tuner.md 
      - Loggers: 
        - BaseLogger: base_logger.md
        - File Logger: file_logger.md
        - StdOut Logger: stdout_logger.md
      - Metadata Trackers: 
        - BaseMetadataTracker: base_metadata_tracker.md
        - MLFlow: mlflow_metadata_tracker.md
      - Metrics Trackers: 
        - BaseMetricsTracker: base_metrics_tracker.md
        - MLFlow: mlflow_metrics_tracker.md
      - Model Bias Checker: 
        - BaseModelBiasChecker: base_model_bias_checker.md
        - AI Fairness 360: aifairness360_model_bias_checker.md
      - Model Checkers: 
        - BaseModelChecker: base_model_checker.md
        - Deepchecks: deepchecks_model_checker.md
        - EvidentlyAI: evidentlyai_model_checker.md
      #- Model Deployers: 
      # - BaseModelDeployer: base_modeL_deployer.md
      - Model Explainers: 
        - BaseModelExplainer: base_model_explainer.md
        - Alibi: alibi_model_explainer.md
      - Model Repositories: 
        - BaseModelRespository: base_model_repository.md
        - MLFlow: mlflow_model_repository.md
      - Model Trainers: 
        - BaseModelTrainer: base_model_trainer.md
        - Prophet: prophet_model_trainer.md
        - XGBoost: xgboost_model_trainer.md
      - Model Visualizers: 
        - BaseModelVisualizer: base_model_visualizer.md
        - Prophet: prophet_model_visualizer.md
        - Yellowbrick: yellowbrick_model_visualizer.md
      - Notifiers: 
        - BaseNotifier: base_notifier.md
        - Gmail: gmail_notifier.md
        #- Slack: slack_notifier.md
        - SMTP : smtp_notifier.md
        - StdOut: stdout_notifier.md
      - Orchestrators: 
        - BaseOrchestrator: base_orchestrator.md
        - PrefectOrchestrator: prefect_orchestrator.md
      - Resource Version Control: 
        - BaseResourceVersionControl: base_resource_version_control.md
        - DVC: dvc_resource_version_control.md
      - Test Recorder: 
        - BaseTestRecorder: base_test_recorder.md
        - Local: local_test_recorder.md
    - Pipelines: 
      #- Overview: pipelines.md
      - BasePipeline: base_pipeline.md 
      - Deploy: 
        - BaseDeploy: base_deploy.md
        - Offline Deploy: offline_deploy.md
      - Predict: 
        - BasePredict: base_predict.md
        - Offline Predict: offline_predict.md
      - Process: 
        - BaseProcess: base_process.md
        - Offline Process: offline_process.md
      - Train: 
        - BaseTrain: base_train.md
        - Offline Train: offline_train.md
      #- Reconcile: 
      #  - BaseReconcile: base_reconcile.md
      #  - Offline Reconcile: offline_reconcile.md
      - Metaflow: 
        - Overview: metaflow_overview.md
        - Metaflow Offline Deploy: metaflow_offline_deploy.md 
        - Metaflow Offline Predict: metaflow_offline_predict.md
        - Metaflow Offline Process: metaflow_offline_process.md
        - Metaflow Offline Train: metaflow_offline_train.md
      #  - Metaflow Offline Reconcile: metaflow_offline_reconcile.md 
      #  - Metaflow Pipeline Wrapper: metaflow_pipeline_wrapper.md
    - Runners: 
      - BaseRunner: base_runner.md
      - Classification: classification_runner.md
      - Regression:  regression_runner.md
      - Time-Series: timeseries_runner.md
      - Metaflow: 
        - Metaflow Classification Runner: metaflow_classification_runner.md
        - Metaflow Regression Runner: metaflow_regression_runner.md 
        # - Metaflow Time-Series: metaflow_timeseries_runner.md
  - Examples: 
    - Overview: examples.md
    - Quick Start Examples: 
      - Classification: classification_quickstart.md
      - Regression: regression_quickstart.md
      - Time Series Forecasting: timeseries_forecasting_quickstart.md
    - Regular Examples: 
      - Classification: classification.md
      - Regression: regression.md 
      - Time Series Forecasting: timeseries_forecasting.md
    - Metaflow Examples: 
      - Classification: classification_metaflow.md
      - Regression: regression_metaflow.md
      - Time Series Forecasting: timeseries_forecasting_metaflow.md



