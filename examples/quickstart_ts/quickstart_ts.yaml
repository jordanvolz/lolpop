#source data: https://www.kaggle.com/datasets/podsyp/time-series-starter-dataset

#runner config
pipelines: 
  process: OfflineProcess 
  train: OfflineTrain
  predict: OfflinePredict
components: 
  metadata_tracker: MLFlowMetadataTracker
  notifier: StdOutNotifier
  resource_version_control: BaseResourceVersionControl
  metrics_tracker: BaseMetricsTracker
config: 
  train_data: /Users/jordanvolz/Downloads/sales_data/train.csv
  eval_data: /Users/jordanvolz/Downloads/sales_data/test.csv
  prediction_data: /Users/jordanvolz/Downloads/sales_data/predictions.csv
  model_name: generic_sales_forecast
  model_target: Revenue
  time_index: Period
  drop_columns: [Sales_quantity,Average_cost, The_average_annual_payroll_of_the_region]
  local_dir: /tmp/artifacts/

#pipelines config
process: 
  components: 
    data_transformer: LocalDataTransformer
  data_transformer: 
    config: 
      transformer_path: /Users/jordanvolz/github/lolpop/examples/quickstart_ts/process_sales_data.py

train: 
  components: 
    data_splitter: LocalDataSplitter
    model_trainer: ProphetModelTrainer
  data_splitter: 
    config: 
      test_size: 3
      validation_size: 3
  model_trainer: 
    config: 
      training_params: 
        seasonality_mode: "additive"
        changepoint_prior_scale: 0.1
        changepoint_range: 0.8
        #holidays_prior_scale: [10,1,0.1,0.01]
        #seasonality_prior_scale: [10,1,0.1,0.01]
      target_min: 0
      country_holidays: US
  config: 
      metrics: ["rmse", "smape", "mape", "r2", "rmsle"]
      perf_metric: rmsle
      retrain_all: True 
      forecast_period: 12
      forecast_frequency: MS
      cv_initial: '730 days'
      cv_period:  '45 days'
      cv_horizon: '90 days'

predict: 
  components: 
    data_connector: LocalDataConnector



#component config
metadata_tracker: 
  config: 
    mlflow_tracking_uri: file:///Users/jordanvolz/Downloads/mlruns
    mlflow_experiment_name: generic_sales_forecast
logger:
  config: 
    log_level: DEBUG